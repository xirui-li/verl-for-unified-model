#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1, 4], threadsPerWarp = [2, 1, 16], warpsPerCTA = [1, 4, 1], order = [2, 0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:89", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @rotary_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg6: i32 loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":13:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<2x8x64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x64xf32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<8x64xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<40> : tensor<2x8x64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<40> : tensor<1x1x64xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<40> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<40> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = tt.get_program_id z : i32 loc(#loc4)
    %3 = arith.muli %2, %arg11 : i32 loc(#loc5)
    %4 = tt.addptr %arg1, %3 : !tt.ptr<f32>, i32 loc(#loc6)
    %5 = arith.muli %2, %arg8 : i32 loc(#loc7)
    %6 = tt.addptr %arg0, %5 : !tt.ptr<f32>, i32 loc(#loc8)
    %7 = arith.muli %1, %c8_i32 : i32 loc(#loc9)
    %8 = arith.cmpi sge, %7, %arg5 : i32 loc(#loc10)
    cf.cond_br %8, ^bb1, ^bb2 loc(#loc10)
  ^bb1:  // pred: ^bb0
    tt.return loc(#loc11)
  ^bb2:  // pred: ^bb0
    %9 = arith.muli %0, %c2_i32 : i32 loc(#loc12)
    %10 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> loc(#loc13)
    %11 = tt.splat %9 : i32 -> tensor<2xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> loc(#loc14)
    %12 = arith.addi %11, %10 : tensor<2xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> loc(#loc14)
    %13 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc15)
    %14 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> loc(#loc15)
    %15 = tt.splat %7 : i32 -> tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc16)
    %16 = tt.splat %7 : i32 -> tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> loc(#loc16)
    %17 = arith.addi %15, %13 : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc16)
    %18 = arith.addi %16, %14 : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> loc(#loc16)
    %19 = tt.splat %arg4 : i32 -> tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc17)
    %20 = arith.addi %17, %19 : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc17)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc18)
    %22 = arith.muli %21, %cst_5 : tensor<8x1xi32, #blocked1> loc(#loc19)
    %23 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc20)
    %24 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 1, parent = #blocked}>}>> loc(#loc20)
    %25 = tt.expand_dims %23 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc20)
    %26 = tt.expand_dims %24 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 1, parent = #blocked}>}>> -> tensor<1x64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc20)
    %27 = tt.broadcast %22 : tensor<8x1xi32, #blocked1> -> tensor<8x64xi32, #blocked1> loc(#loc21)
    %28 = tt.broadcast %25 : tensor<1x64xi32, #blocked1> -> tensor<8x64xi32, #blocked1> loc(#loc21)
    %29 = arith.addi %27, %28 : tensor<8x64xi32, #blocked1> loc(#loc21)
    %30 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>, #blocked1> loc(#loc22)
    %31 = tt.addptr %30, %29 : tensor<8x64x!tt.ptr<f32>, #blocked1>, tensor<8x64xi32, #blocked1> loc(#loc22)
    %32 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %33 = tt.addptr %32, %29 : tensor<8x64x!tt.ptr<f32>, #blocked1>, tensor<8x64xi32, #blocked1> loc(#loc23)
    %34 = tt.splat %arg7 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc24)
    %35 = arith.cmpi slt, %21, %34 : tensor<8x1xi32, #blocked1> loc(#loc24)
    %36 = arith.cmpi slt, %25, %cst_4 : tensor<1x64xi32, #blocked1> loc(#loc25)
    %37 = tt.broadcast %35 : tensor<8x1xi1, #blocked1> -> tensor<8x64xi1, #blocked1> loc(#loc26)
    %38 = tt.broadcast %36 : tensor<1x64xi1, #blocked1> -> tensor<8x64xi1, #blocked1> loc(#loc26)
    %39 = arith.andi %37, %38 : tensor<8x64xi1, #blocked1> loc(#loc26)
    %40 = tt.load %31, %39, %cst_1 : tensor<8x64x!tt.ptr<f32>, #blocked1> loc(#loc27)
    %41 = tt.load %33, %39, %cst_0 : tensor<8x64x!tt.ptr<f32>, #blocked1> loc(#loc28)
    %42 = tt.expand_dims %12 {axis = 1 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 1, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> -> tensor<2x1xi32, #triton_gpu.slice<{dim = 2, parent = #blocked}>> loc(#loc29)
    %43 = tt.expand_dims %42 {axis = 2 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 2, parent = #blocked}>> -> tensor<2x1x1xi32, #blocked> loc(#loc29)
    %44 = tt.splat %arg13 : i32 -> tensor<2x1x1xi32, #blocked> loc(#loc30)
    %45 = arith.muli %43, %44 : tensor<2x1x1xi32, #blocked> loc(#loc30)
    %46 = tt.expand_dims %18 {axis = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked}>}>> -> tensor<1x8xi32, #triton_gpu.slice<{dim = 2, parent = #blocked}>> loc(#loc31)
    %47 = tt.expand_dims %46 {axis = 2 : i32} : tensor<1x8xi32, #triton_gpu.slice<{dim = 2, parent = #blocked}>> -> tensor<1x8x1xi32, #blocked> loc(#loc31)
    %48 = tt.splat %arg12 : i32 -> tensor<1x8x1xi32, #blocked> loc(#loc32)
    %49 = arith.muli %47, %48 : tensor<1x8x1xi32, #blocked> loc(#loc32)
    %50 = tt.broadcast %45 : tensor<2x1x1xi32, #blocked> -> tensor<2x8x1xi32, #blocked> loc(#loc33)
    %51 = tt.broadcast %49 : tensor<1x8x1xi32, #blocked> -> tensor<2x8x1xi32, #blocked> loc(#loc33)
    %52 = arith.addi %50, %51 : tensor<2x8x1xi32, #blocked> loc(#loc33)
    %53 = tt.expand_dims %26 {axis = 1 : i32} : tensor<1x64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1x64xi32, #blocked> loc(#loc34)
    %54 = tt.broadcast %52 : tensor<2x8x1xi32, #blocked> -> tensor<2x8x64xi32, #blocked> loc(#loc35)
    %55 = tt.broadcast %53 : tensor<1x1x64xi32, #blocked> -> tensor<2x8x64xi32, #blocked> loc(#loc35)
    %56 = arith.addi %54, %55 : tensor<2x8x64xi32, #blocked> loc(#loc35)
    %57 = tt.splat %4 : !tt.ptr<f32> -> tensor<2x8x64x!tt.ptr<f32>, #blocked> loc(#loc36)
    %58 = tt.addptr %57, %56 : tensor<2x8x64x!tt.ptr<f32>, #blocked>, tensor<2x8x64xi32, #blocked> loc(#loc36)
    %59 = tt.splat %arg10 : i32 -> tensor<2x1x1xi32, #blocked> loc(#loc37)
    %60 = arith.muli %43, %59 : tensor<2x1x1xi32, #blocked> loc(#loc37)
    %61 = tt.splat %arg9 : i32 -> tensor<1x8x1xi32, #blocked> loc(#loc38)
    %62 = arith.muli %47, %61 : tensor<1x8x1xi32, #blocked> loc(#loc38)
    %63 = tt.broadcast %60 : tensor<2x1x1xi32, #blocked> -> tensor<2x8x1xi32, #blocked> loc(#loc39)
    %64 = tt.broadcast %62 : tensor<1x8x1xi32, #blocked> -> tensor<2x8x1xi32, #blocked> loc(#loc39)
    %65 = arith.addi %63, %64 : tensor<2x8x1xi32, #blocked> loc(#loc39)
    %66 = tt.broadcast %65 : tensor<2x8x1xi32, #blocked> -> tensor<2x8x64xi32, #blocked> loc(#loc40)
    %67 = arith.addi %66, %55 : tensor<2x8x64xi32, #blocked> loc(#loc40)
    %68 = tt.splat %6 : !tt.ptr<f32> -> tensor<2x8x64x!tt.ptr<f32>, #blocked> loc(#loc41)
    %69 = tt.addptr %68, %67 : tensor<2x8x64x!tt.ptr<f32>, #blocked>, tensor<2x8x64xi32, #blocked> loc(#loc41)
    %70 = tt.splat %arg6 : i32 -> tensor<2x1x1xi32, #blocked> loc(#loc42)
    %71 = arith.cmpi slt, %43, %70 : tensor<2x1x1xi32, #blocked> loc(#loc42)
    %72 = tt.splat %arg5 : i32 -> tensor<1x8x1xi32, #blocked> loc(#loc43)
    %73 = arith.cmpi slt, %47, %72 : tensor<1x8x1xi32, #blocked> loc(#loc43)
    %74 = tt.broadcast %71 : tensor<2x1x1xi1, #blocked> -> tensor<2x8x1xi1, #blocked> loc(#loc44)
    %75 = tt.broadcast %73 : tensor<1x8x1xi1, #blocked> -> tensor<2x8x1xi1, #blocked> loc(#loc44)
    %76 = arith.andi %74, %75 : tensor<2x8x1xi1, #blocked> loc(#loc44)
    %77 = arith.cmpi slt, %53, %cst_3 : tensor<1x1x64xi32, #blocked> loc(#loc45)
    %78 = tt.broadcast %76 : tensor<2x8x1xi1, #blocked> -> tensor<2x8x64xi1, #blocked> loc(#loc46)
    %79 = tt.broadcast %77 : tensor<1x1x64xi1, #blocked> -> tensor<2x8x64xi1, #blocked> loc(#loc46)
    %80 = arith.andi %78, %79 : tensor<2x8x64xi1, #blocked> loc(#loc46)
    %81 = tt.load %58, %80, %cst : tensor<2x8x64x!tt.ptr<f32>, #blocked> loc(#loc47)
    %82 = tt.addptr %58, %cst_2 : tensor<2x8x64x!tt.ptr<f32>, #blocked>, tensor<2x8x64xi32, #blocked> loc(#loc48)
    %83 = tt.load %82, %80, %cst : tensor<2x8x64x!tt.ptr<f32>, #blocked> loc(#loc49)
    %84 = triton_gpu.convert_layout %40 : tensor<8x64xf32, #blocked1> -> tensor<8x64xf32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc50)
    %85 = tt.expand_dims %84 {axis = 0 : i32} : tensor<8x64xf32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8x64xf32, #blocked> loc(#loc50)
    %86 = tt.broadcast %85 : tensor<1x8x64xf32, #blocked> -> tensor<2x8x64xf32, #blocked> loc(#loc50)
    %87 = arith.mulf %81, %86 : tensor<2x8x64xf32, #blocked> loc(#loc50)
    %88 = triton_gpu.convert_layout %41 : tensor<8x64xf32, #blocked1> -> tensor<8x64xf32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc51)
    %89 = tt.expand_dims %88 {axis = 0 : i32} : tensor<8x64xf32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8x64xf32, #blocked> loc(#loc51)
    %90 = tt.broadcast %89 : tensor<1x8x64xf32, #blocked> -> tensor<2x8x64xf32, #blocked> loc(#loc51)
    %91 = arith.mulf %83, %90 : tensor<2x8x64xf32, #blocked> loc(#loc51)
    %92 = arith.subf %87, %91 : tensor<2x8x64xf32, #blocked> loc(#loc52)
    %93 = arith.mulf %81, %90 : tensor<2x8x64xf32, #blocked> loc(#loc53)
    %94 = arith.mulf %83, %86 : tensor<2x8x64xf32, #blocked> loc(#loc54)
    %95 = arith.addf %93, %94 : tensor<2x8x64xf32, #blocked> loc(#loc55)
    tt.store %69, %92, %80 : tensor<2x8x64x!tt.ptr<f32>, #blocked> loc(#loc56)
    %96 = tt.addptr %69, %cst_2 : tensor<2x8x64x!tt.ptr<f32>, #blocked>, tensor<2x8x64xi32, #blocked> loc(#loc57)
    tt.store %96, %95, %80 : tensor<2x8x64x!tt.ptr<f32>, #blocked> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":46:29)
#loc3 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":47:26)
#loc4 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":48:30)
#loc5 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":51:28)
#loc6 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":51:16)
#loc7 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":52:32)
#loc8 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":52:20)
#loc9 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":59:15)
#loc10 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":59:26)
#loc11 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":60:8)
#loc12 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":62:20)
#loc13 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":62:43)
#loc14 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":62:30)
#loc15 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":63:40)
#loc16 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":63:27)
#loc17 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":65:21)
#loc18 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":70:23)
#loc19 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":70:34)
#loc20 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":70:60)
#loc21 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":70:52)
#loc22 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":70:17)
#loc23 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":71:17)
#loc24 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":72:32)
#loc25 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":72:65)
#loc26 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":72:46)
#loc27 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":73:18)
#loc28 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":74:18)
#loc29 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:20)
#loc30 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:37)
#loc31 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:58)
#loc32 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:75)
#loc33 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:55)
#loc34 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:101)
#loc35 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:93)
#loc36 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":80:17)
#loc37 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":81:41)
#loc38 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":81:81)
#loc39 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":81:61)
#loc40 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":81:101)
#loc41 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":81:21)
#loc42 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":82:36)
#loc43 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":82:67)
#loc44 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":82:47)
#loc45 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":82:103)
#loc46 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":82:78)
#loc47 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":83:21)
#loc48 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":84:25)
#loc49 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":84:21)
#loc50 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":85:18)
#loc51 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":85:29)
#loc52 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":85:24)
#loc53 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":86:18)
#loc54 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":86:29)
#loc55 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":86:24)
#loc56 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":87:22)
#loc57 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":88:23)
#loc58 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":88:61)
#loc59 = loc("/workspace/miniconda3/envs/verl-unified/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py":78:4)
